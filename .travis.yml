dist: trusty
sudo: required
services:
  - docker
jobs:
  include:
    - stage: compile
      language: java
      jdk: oraclejdk8
      before_script:
        - cd admin
      script:
        - mvn clean install
        - echo "Deploying to GitHub releases ..."
      after_script:
        - ls
        - cd ..
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        on:
          tags: true
        file: "target/admin-0.0.1-SNAPSHOT.jar"
      cache:
        directories:
        - $HOME/.m2
    - stage: compile
      language: java
      jdk: oraclejdk8
      before_script:
        - cd service
      script:
        - mvn clean install
        - echo "Deploying to GitHub releases ..."
      after_script:
        - ls
        - cd ..
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        on:
          tags: true
        file: "target/service-0.0.1-SNAPSHOT.jar"
      cache:
        directories:
        - $HOME/.m2
      after_success:
        - ls
        - pwd
    - stage: compile
      language: node_js
      node_js:
        - "node"
      before_script:
        - cd multiservice-react-app
        - npm install
      cache:
        directories:
          - "node_modules"
      script:
        - npm run build
        - tar -czvf multiservice-react-app.tar.gz build
#         - tar -zcf ${TRAVIS_BUILD_DIR}${REPO}-${BUILD_ENV}-${TRAVIS_TAG}-${TRAVIS_BUILD_NUMBER}.tar.gz ${REPO}
        - echo "Deploying to GitHub releases ..."
      after_script:
        - ls
        - cd ..
      after_success:
        - ls
        - pwd
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        on:
          tags: true
        file: "multiservice-react-app.tar.gz"
        skip_cleanup: true
# script: ls
# script:
#   - echo "Hello There!!!"
#   - docker ps 
#   - heroku auth:token
#   - docker build -t registry.heroku.com/nginx-revese-proxy/web .
#   - heroku container:login
#   - heroku container:push web --app=nginx-revese-proxy
#   - heroku container:release web --app=nginx-revese-proxy
notifications:
    email: false
